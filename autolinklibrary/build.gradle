apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'


android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            tasks.withType(Javadoc).all { enabled = false }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            systemProperty "robolectric.logging.enabled", true
            systemProperty "robolectric.logging", "stdout"
            testLogging {
                exceptionFormat "full"
            }
            // listen to events in the test execution lifecycle
            beforeTest { descriptor ->
                println "${descriptor.className} > Starting test: $descriptor.name."
            }
            jvmArgs '-XX:MaxPermSize=1024m',
                    '-noverify' // Or any other gradle option.
            afterTest { descriptor, result ->
                println "${descriptor.className} > Finished executing test ${descriptor.name} " +
                        "with result: ${result.resultType}."
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-annotations:$support_library_version"
    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:$robolectric_version"
    testCompile "com.squareup.assertj:assertj-android:$assertj_version"
    testCompile "org.mockito:mockito-core:${mockito_version}"
    testCompile "com.android.support.test:rules:${support_test_version}"
}

publish {
    groupId = 'com.github.armcha'
    artifactId = 'AutoLinkTextView'
    publishVersion = '0.1.1'
    desc = 'Auto Link Text View'
    licences = ['MIT']
    website = 'https://github.com/armcha/AutoLinkTextView'
}
